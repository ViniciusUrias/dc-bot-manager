openapi: 3.0.3
info:
  title: Discord Bot Builder API
  description: API for building and managing Discord bots
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Enter JWT token in format: Bearer <token>"
  schemas: {}
paths:
  /v1/servers/:
    get:
      tags:
        - Servers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
    post:
      tags:
        - Servers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                ownerId:
                  type: string
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                serverid:
                  type: string
                  nullable: true
              additionalProperties: false
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  ownerId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  serverid:
                    type: string
                    nullable: true
                required:
                  - id
                  - name
                  - description
                  - ownerId
                  - createdAt
                  - updatedAt
                  - serverid
                additionalProperties: false
        "409":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                required:
                  - error
                  - message
                additionalProperties: false
  /v1/servers/{serverId}:
    get:
      tags:
        - Servers
      description: Get server by id
      parameters:
        - schema:
            type: string
          in: path
          name: serverId
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  ownerId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  serverid:
                    type: string
                    nullable: true
                required:
                  - id
                  - name
                  - description
                  - ownerId
                  - createdAt
                  - updatedAt
                  - serverid
                additionalProperties: false
        "404":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
                required:
                  - message
                  - error
                additionalProperties: false
    put:
      tags:
        - Servers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                  nullable: true
              required:
                - name
              additionalProperties: false
        required: true
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
          in: path
          name: serverId
          required: true
      responses:
        "200":
          description: Default Response
    delete:
      tags:
        - Servers
      parameters:
        - schema:
            type: string
          in: path
          name: serverId
          required: true
      security:
        - bearerAuth: []
      responses:
        "204":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  messsage:
                    type: string
                required:
                  - messsage
                additionalProperties: false
  /v1/bots/:
    get:
      tags:
        - Bots
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
    post:
      tags:
        - Bots
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
  /v1/bots/start:
    post:
      tags:
        - Bots
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                botId:
                  type: string
              required:
                - botId
              additionalProperties: false
        required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
  /v1/bots/stop:
    post:
      tags:
        - Bots
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                botId:
                  type: string
              required:
                - botId
              additionalProperties: false
        required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
  /v1/bots/{botId}:
    get:
      tags:
        - Bots
      parameters:
        - schema:
            type: string
          in: path
          name: botId
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
    put:
      tags:
        - Bots
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - not: {}
                - type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    token:
                      type: string
                    active:
                      type: boolean
                    ownerId:
                      type: string
                    prefix:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    description:
                      type: string
                    tags:
                      type: array
                      items:
                        type: string
                    icon:
                      type: string
                      nullable: true
                    serverId:
                      type: string
                  required:
                    - id
                    - name
                    - token
                    - active
                    - ownerId
                    - prefix
                    - createdAt
                    - updatedAt
                    - description
                    - tags
                    - icon
                    - serverId
                  additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: botId
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
    delete:
      tags:
        - Bots
      parameters:
        - schema:
            type: string
          in: path
          name: botId
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
  /v1/bots/{botId}/sync:
    put:
      tags:
        - Bots
      parameters:
        - schema:
            type: string
          in: path
          name: botId
          required: true
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Default Response
servers:
  - url: http://localhost:3000
    description: Development server
