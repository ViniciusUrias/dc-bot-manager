/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../api/services/axios.ts'
import type { RequestConfig, ResponseConfig, ResponseErrorConfig } from '../../api/services/axios.ts'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import type { deleteV1ServersServeridMutationResponse, deleteV1ServersServeridPathParams } from '../../gen/types/servers/deleteServersServerid.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteV1ServersServeridMutationKey = () => [{ url: '/v1/servers/{serverId}' }] as const

export type DeleteV1ServersServeridMutationKey = ReturnType<typeof deleteV1ServersServeridMutationKey>

/**
 * {@link /v1/servers/:serverId}
 */
export async function deleteV1ServersServerid(
  serverId: deleteV1ServersServeridPathParams['serverId'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<deleteV1ServersServeridMutationResponse, ResponseErrorConfig<Error>, unknown>({
    method: 'DELETE',
    url: `/v1/servers/${serverId}`,
    ...requestConfig,
  })
  return res
}

/**
 * {@link /v1/servers/:serverId}
 */
export function useDeleteV1ServersServerid<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ResponseConfig<deleteV1ServersServeridMutationResponse>,
      ResponseErrorConfig<Error>,
      { serverId: deleteV1ServersServeridPathParams['serverId'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const { mutation: { client: queryClient, ...mutationOptions } = {}, client: config = {} } = options ?? {}
  const mutationKey = mutationOptions?.mutationKey ?? deleteV1ServersServeridMutationKey()

  return useMutation<
    ResponseConfig<deleteV1ServersServeridMutationResponse>,
    ResponseErrorConfig<Error>,
    { serverId: deleteV1ServersServeridPathParams['serverId'] },
    TContext
  >(
    {
      mutationFn: async ({ serverId }) => {
        return deleteV1ServersServerid(serverId, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}